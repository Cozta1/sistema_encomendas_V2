# Generated by Django 4.2.25 on 2025-10-22 14:52

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('identificacao', models.CharField(max_length=20, unique=True, verbose_name='Identificação (CPF/CNPJ)')),
                ('cargo', models.CharField(max_length=100, verbose_name='Cargo')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Usuário Ativo')),
                ('token_reset_senha', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Token de Reset de Senha')),
                ('data_expiracao_token', models.DateTimeField(blank=True, null=True, verbose_name='Data de Expiração do Token')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['nome_completo'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Cliente')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('endereco', models.TextField(verbose_name='Endereço')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('referencia', models.CharField(blank=True, max_length=200, verbose_name='Referência')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Encomenda',
            fields=[
                ('numero_encomenda', models.AutoField(primary_key=True, serialize=False, verbose_name='Número da Encomenda')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação (sistema)')),
                ('data_encomenda', models.DateField(default=django.utils.timezone.now, help_text='Data da encomenda (campo do cabeçalho)', verbose_name='Data')),
                ('responsavel_criacao', models.CharField(help_text='Responsável pela criação da encomenda', max_length=100, verbose_name='Responsável')),
                ('status', models.CharField(choices=[('criada', 'Criada'), ('cotacao', 'Em Cotação'), ('aprovada', 'Aprovada'), ('em_andamento', 'Em Andamento'), ('pronta', 'Pronta para Entrega'), ('entregue', 'Entregue'), ('cancelada', 'Cancelada')], default='criada', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, help_text="Campo 'Observação' do formulário físico", verbose_name='Observação')),
                ('valor_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor total dos produtos da encomenda', max_digits=10, verbose_name='Valor do Produto')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encomendas.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Encomenda',
                'verbose_name_plural': 'Encomendas',
                'ordering': ['-numero_encomenda'],
            },
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID da Equipe')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Equipe')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('ativa', models.BooleanField(default=True, verbose_name='Equipe Ativa')),
                ('administrador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipes_administradas', to=settings.AUTH_USER_MODEL, verbose_name='Administrador')),
            ],
            options={
                'verbose_name': 'Equipe',
                'verbose_name_plural': 'Equipes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Fornecedor')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('contato', models.CharField(blank=True, max_length=200, verbose_name='Contato')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Produto')),
                ('codigo', models.CharField(max_length=50, unique=True, verbose_name='Código')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('preco_base', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço Base')),
                ('categoria', models.CharField(blank=True, max_length=100, verbose_name='Categoria')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MembroEquipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('papel', models.CharField(choices=[('administrador', 'Administrador'), ('gerente', 'Gerente'), ('membro', 'Membro')], default='membro', max_length=20, verbose_name='Papel')),
                ('data_adesao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Adesão')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('equipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encomendas.equipe', verbose_name='Equipe')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Membro da Equipe',
                'verbose_name_plural': 'Membros da Equipe',
                'ordering': ['usuario__nome_completo'],
                'unique_together': {('equipe', 'usuario')},
            },
        ),
        migrations.CreateModel(
            name='ItemEncomenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1, verbose_name='Quantidade')),
                ('preco_cotado', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço Cotado')),
                ('valor_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Valor Total')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('encomenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='encomendas.encomenda')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encomendas.fornecedor', verbose_name='Fornecedor')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='encomendas.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Item da Encomenda',
                'verbose_name_plural': 'Itens da Encomenda',
            },
        ),
        migrations.AddField(
            model_name='equipe',
            name='membros',
            field=models.ManyToManyField(related_name='equipes', through='encomendas.MembroEquipe', to=settings.AUTH_USER_MODEL, verbose_name='Membros'),
        ),
        migrations.CreateModel(
            name='Entrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_entrega', models.DateField(default=django.utils.timezone.now, help_text="Campo 'Data Entrega' do formulário físico", verbose_name='Data Entrega')),
                ('responsavel_entrega', models.CharField(default='A definir', help_text="Campo 'Responsável Entrega' do formulário físico", max_length=100, verbose_name='Responsável Entrega')),
                ('valor_pago_adiantamento', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text="Campo 'Valor Pago Adiantamento' do formulário físico", max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Pago Adiantamento')),
                ('data_entrega_realizada', models.DateField(blank=True, help_text='Data da entrega realizada (seção inferior)', null=True, verbose_name='Data (Realizada)')),
                ('hora_entrega', models.TimeField(blank=True, help_text='Hora da entrega (seção inferior)', null=True, verbose_name='Hora (Realizada)')),
                ('entregue_por', models.CharField(blank=True, help_text="Campo 'Entregue por' da seção inferior", max_length=100, verbose_name='Entregue por')),
                ('assinatura_cliente', models.BooleanField(default=False, help_text='Marcar se o cliente assinou', verbose_name='Ass. do Cliente')),
                ('data_prevista', models.DateField(blank=True, null=True, verbose_name='Data Prevista (Controle Interno)')),
                ('data_realizada', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora Realizada (Controle Interno)')),
                ('observacoes_entrega', models.TextField(blank=True, verbose_name='Observações da Entrega')),
                ('encomenda', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='entrega', to='encomendas.encomenda', verbose_name='Encomenda')),
            ],
            options={
                'verbose_name': 'Entrega',
                'verbose_name_plural': 'Entregas',
            },
        ),
        migrations.AddField(
            model_name='encomenda',
            name='equipe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encomendas', to='encomendas.equipe', verbose_name='Equipe Responsável'),
        ),
        migrations.CreateModel(
            name='ConviteEquipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID do Convite')),
                ('email', models.EmailField(max_length=254, verbose_name='Email do Convidado')),
                ('papel', models.CharField(choices=[('administrador', 'Administrador'), ('gerente', 'Gerente'), ('membro', 'Membro')], default='membro', max_length=20, verbose_name='Papel')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aceito', 'Aceito'), ('rejeitado', 'Rejeitado'), ('expirado', 'Expirado')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_expiracao', models.DateTimeField(verbose_name='Data de Expiração')),
                ('data_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Data de Resposta')),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='convites_enviados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('equipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='convites', to='encomendas.equipe', verbose_name='Equipe')),
            ],
            options={
                'verbose_name': 'Convite de Equipe',
                'verbose_name_plural': 'Convites de Equipe',
                'ordering': ['-data_criacao'],
            },
        ),
    ]
